<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>net.fhirfactory</groupId>
    <artifactId>jgroups-kubeping-poc</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>JGroups :: KubePing :: Proof-of-Concept</name>

    <prerequisites>
        <maven>3.5.0</maven>
    </prerequisites>

    <dependencies>
        <dependency>
            <groupId>info.picocli</groupId>
            <artifactId>picocli</artifactId>
            <version>3.9.6</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.10</version>
        </dependency>

        <dependency>
            <groupId>org.jgroups</groupId>
            <artifactId>jgroups</artifactId>
            <version>4.2.16.Final</version>
        </dependency>

        <dependency>
            <groupId>org.jgroups.kubernetes</groupId>
            <artifactId>jgroups-kubernetes</artifactId>
            <version>1.0.16.Final</version>
        </dependency>
	
	<dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>20200518</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>2.9.10</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.9.10</version>
        </dependency>

        <dependency>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-assembly-plugin</artifactId>
            <version>3.3.0</version>
            <scope>compile</scope>
        </dependency>

        <!-- logging -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.2.3</version>
        </dependency>
    </dependencies>


    <!-- Profiles -->
    <profiles>
        <!-- Separate profiles are provided for running tests, including Arquillian tests that execute in a specified container -->
        <profile>
            <!-- The default profile skips all tests, though you can tune it to run just unit tests based on a custom pattern -->
            <id>default</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>3.0.0-M5</version>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <version>3.3.0</version>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                                <configuration>
                                    <archive>
                                        <manifest>
                                            <mainClass>
                                                au.gov.act.health.aether.petasos.ipc.AETHERPetasosGossipRouter
                                            </mainClass>
                                        </manifest>
                                    </archive>
                                    <descriptorRefs>
                                        <descriptorRef>jar-with-dependencies</descriptorRef>
                                    </descriptorRefs>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>dev-workstation</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>3.8.0</version>
                        <configuration>
                            <source>11</source>
                            <target>11</target>
                            <maxmem>512M</maxmem>
                            <showDeprecation>true</showDeprecation>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <version>3.3.0</version>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                                <configuration>
                                    <archive>
                                        <manifest>
                                            <mainClass>
                                                net.fhirfactory.poc.jgroups.PegacornNodeCLI
                                            </mainClass>
                                        </manifest>
                                    </archive>
                                    <descriptorRefs>
                                        <descriptorRef>jar-with-dependencies</descriptorRef>
                                    </descriptorRefs>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>3.0.0</version>
                        <executions>
                            <execution>
                                <id>subsystem-config-file-copy</id>
                                <phase>compile</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <echo>ANT TASK - Copying Configuration files from
                                            ${project.basedir}/install/kubernetes to
                                            ${project.basedir}/target/docker
                                        </echo>
                                        <copy todir="${project.basedir}/target/docker/"
                                              overwrite="true" flatten="true">
                                            <fileset
                                                    dir="${project.basedir}/install/kubernetes/">
                                                <include name="systemconfig-*.yaml"/>
                                            </fileset>
                                        </copy>
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>docker-config-build</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <echo>ANT TASK - Copying Docker files from
                                            ${project.basedir}/src/main/docker to
                                            ${project.basedir}/target/docker
                                        </echo>
                                        <copy todir="${project.basedir}/target/docker/"
                                              overwrite="true" flatten="true">
                                            <fileset
                                                    dir="${project.basedir}/src/main/docker/">
                                                <include name="*"/>
                                            </fileset>
                                        </copy>
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>war-copy</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <echo>ANT TASK - Copying Docker build files from
                                            ${project.basedir}/target/*.jar to
                                            ${project.basedir}/target/docker
                                        </echo>
                                        <copy todir="${project.basedir}/target/docker/"
                                              overwrite="true" flatten="true">
                                            <fileset
                                                    dir="${project.basedir}/target/">
                                                <include name="*.jar"/>
                                            </fileset>
                                        </copy>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>3.0.0</version>
                        <executions>
                            <execution>
                                <id>build-docker-image</id>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <phase>package</phase>
                                <configuration>
                                    <workingDirectory>${project.basedir}/target/docker/</workingDirectory>
                                    <executable>docker</executable>
                                    <arguments>
                                        <argument>build</argument>
                                        <argument>--rm</argument>
                                        <argument>--build-arg</argument>
                                        <argument>IMAGE_BUILD_TIMESTAMP=${maven.build.timestamp}</argument>
                                        <argument>-t</argument>
                                        <argument>localhost:32000/${artifactId}:${project.version}</argument>
                                        <argument>--file</argument>
                                        <argument>Dockerfile</argument>
                                        <argument>${project.basedir}/target/docker/</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>push-image-to-repo</id>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <phase>install</phase>
                                <configuration>
                                    <workingDirectory>${project.basedir}/target/docker/</workingDirectory>
                                    <executable>docker</executable>
                                    <arguments>
                                        <argument>push</argument>
                                        <argument>localhost:32000/${artifactId}:${project.version}</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
